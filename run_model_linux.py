"""
Created on Mon Oct 1 16:09:05 2023
@author: Prajwal Khanal
"""

import os
from PyStemmusScope import StemmusScope
from PyStemmusScope import save
from datetime import datetime
#import pandas as pd
#import numpy as np
#import matplotlib.pyplot as plt

startTime = datetime.now()
ws = os.path.join('.')
    
# user must provide the correct path
path_to_config_file = os.path.join(ws, 'ICOS_sites', 'FI-Qvd', 'config_file.txt')
#path_to_config_file = os.path.join(ws, 'example', 'config_file.txt')
path_to_exe_file = os.path.join(ws, 'STEMMUS_SCOPE', 'run_model_on_snellius', 'exe', 'STEMMUS_SCOPE')    

# If you run the model on your own machine, make sure LD_LIBRARY_PATH is set correctly.
# To do this, uncomment the cell below and run it: 
# Set LD_LIBRARY_PATH
matlab_path = '/opt/matlab' #!whereis MATLAB  
#matlab_path = matlab_path.s.split(": ")[1]
os.environ['LD_LIBRARY_PATH'] = (
     f"{matlab_path}/MATLAB_Runtime/v910/runtime/glnxa64:"
     f"{matlab_path}/MATLAB_Runtime/v910/bin/glnxa64:"
     f"{matlab_path}/MATLAB_Runtime/v910/sys/os/glnxa64:"
     f"{matlab_path}/MATLAB_Runtime/v910/extern/bin/glnxa64:"
     f"{matlab_path}/MATLAB_Runtime/v910/sys/opengl/lib/glnxa64")
print(os.environ['LD_LIBRARY_PATH'])

# create an an instance of the model
model = StemmusScope(config_file = path_to_config_file, model_src_path = path_to_exe_file)

# setup the model
# here you can change the location and start & end time
config_path = model.setup(
    Location="FI-Qvd",
    StartTime="2018-01-01T00:00",
    EndTime="2018-01-31T23:30",)

# new config file genertaed to run the model 
print(f"New config file {config_path}")

# see input and output paths generated by the model
print(f'Model input dir {model.config["InputPath"]}')
print(f'Model output dir {model.config["OutputPath"]}')

# run the model
result = model.run()
result

# save output in netcdf format
required_netcdf_variables = os.path.join(ws, 'STEMMUS_SCOPE', 'utils', 'csv_to_nc', 'required_netcdf_variables.csv')
nc_file_name = save.to_netcdf(config_path, required_netcdf_variables)
print(nc_file_name)    

print ('the script took', datetime.now() - startTime, 'to run')
